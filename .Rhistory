#geom_bin_label() +
geom_gene(aes(fill=name))# +
gggenomes(emale_genes, emale_seqs, emale_tirs, emale_ava) %>%
add_feats(ngaros=emale_ngaros, gc=emale_gc) %>%
#add_sublinks(emale_prot_ava) %>%
flip_by_links() +
geom_feat(position="identity", size=6) +
geom_seq() +
#geom_link(data=links(2)) +
#geom_bin_label() +
geom_gene(aes(fill=name))# +
gggenomes(t) +
geom_gene(aes(color=name, fill=name),position="jitter")+ geom_seq() #+ geom_gene(aes(fill=product)) + geom_bin_label() +
##+ geom_gene(aes(fill=product)) + geom_bin_label() +
gggenomes(t) +
geom_gene(aes(color=name, fill=name),position="jitter")+
geom_seq() +
labs(fill = 'Protein') +
geom_gene_tag(aes(label=name), nudge_y=0.1, check_overlap = TRUE)
##+ geom_gene(aes(fill=product)) + geom_bin_label() +
gggenomes(t) +
geom_gene(aes(color=name, fill=name),position="jitter")+
geom_seq() +
labs(fill = 'Protein') +
geom_gene_tag(aes(label=name), check_overlap = TRUE)
gggenomes(emale_genes, emale_seqs, emale_tirs, emale_ava) %>%
add_feats(ngaros=emale_ngaros, gc=emale_gc) %>%
#add_sublinks(emale_prot_ava) %>%
flip_by_links() +
geom_feat(position="identity", size=6) +
geom_seq() +
#geom_link(data=links(2)) +
#geom_bin_label() +
geom_gene(aes(fill=name)) +
geom_gene_tag(aes(label=name), nudge_y=0.1, check_overlap = TRUE) #+
##+ geom_gene(aes(fill=product)) + geom_bin_label() +
gggenomes(t) +
geom_gene(aes(color=name, fill=name),position="jitter")+
geom_seq() +
labs(fill = 'Protein') +
geom_gene_tag(aes(label=name), check_overlap = TRUE,position="jitter")
##+ geom_gene(aes(fill=product)) + geom_bin_label() +
gggenomes(t) +
geom_gene(aes(color=name, fill=name),position="jitter")+
geom_seq() +
labs(fill = 'Protein') #+
##+ geom_gene(aes(fill=product)) + geom_bin_label() +
gggenomes(t) +
geom_gene(aes(color=name, fill=name),position="jitter")+
geom_seq() +
labs(fill = 'Protein') #+
##+ geom_gene(aes(fill=product)) + geom_bin_label() +
gggenomes(t) +
geom_gene(aes(color=name, fill=name),position="jitter")+
geom_seq() +
labs(fill = 'Protein') #+
##+ geom_gene(aes(fill=product)) + geom_bin_label() +
gggenomes(t) +
geom_gene(aes(fill=name),position="jitter")+
geom_seq() +
labs(fill = 'Protein') #+
##+ geom_gene(aes(fill=product)) + geom_bin_label() +
gggenomes(t) +
geom_gene(aes(fill=name),position="jitter")+
geom_seq() +
labs(fill = 'Protein') #+
##+ geom_gene(aes(fill=product)) + geom_bin_label() +
gggenomes(t) +
geom_gene(aes(fill=name))+
geom_seq() +
labs(fill = 'Protein') #+
##+ geom_gene(aes(fill=product)) + geom_bin_label() +
gggenomes(t) +
geom_gene(aes(fill=name), check_overlap = TRUE,)+
geom_seq() +
labs(fill = 'Protein') #+
##+ geom_gene(aes(fill=product)) + geom_bin_label() +
gggenomes(t) +
geom_gene(aes(fill=name), check_overlap = TRUE)+
geom_seq() +
labs(fill = 'Protein') #+
data<-tibble(
file_id=rep('file', 3),
seq_id =rep('BVI',3),
start = c(10,20,30),
end=c(25,35,45),
type=rep('CDS',3),
name=c('NS1','VP1','VP2'))
gggenomes(data) +
geom_gene(aes(fill=name), check_overlap = TRUE)+
geom_seq() +
labs(fill = 'Protein')
gggenomes(data) +
geom_gene(aes(fill=name), check_overlap = TRUE)+
geom_seq(position="pile") +
labs(fill = 'Protein')
gggenomes(data) +
geom_gene(aes(fill=name), position="pile")+
geom_seq() +
labs(fill = 'Protein')
data<-tibble(
file_id=rep('file', 3),
seq_id =rep('BVI',3),
start = c(10,40,50),
end=c(25,55,55),
type=rep('CDS',3),
name=c('NS1','VP1','VP2'))
gggenomes(data) +
geom_gene(aes(fill=name), position="pile")+
geom_seq() +
labs(fill = 'Protein')
data<-tibble(
file_id=rep('file', 6),
seq_id =rep('BVI',6),
start = c(616,2084,2624,2874, 3305, 4890),
end=c(2631,2308,4969,3119, 4969, 5174),
type=rep('CDS',6),
name=c('NS1','7.5kDa','VP1','X','VP2', '11kDa'))
gggenomes(data) +
geom_gene(aes(fill=name), position="pile")+
geom_seq() +
labs(fill = 'Protein')
data<-tibble(
file_id=rep('file', 6),
seq_id =rep('BVI',6),
start = c(616,2084,2624,2874, 3305, 4890),
end=c(2631,2308,4969,3119, 4969, 5174),
type=rep('CDS',6),
name=c('NS1','7.5kDa','VP1','X','VP2', '11kDa'))
gggenomes(data) +
geom_gene(aes(fill=name), position="pile")+
geom_seq() +
labs(fill = 'Protein')
data
gggenomes(data) +
geom_gene(aes(fill=name))+
geom_seq() +
labs(fill = 'Protein')
gggenomes(data) +
geom_gene(aes(fill=name), position="pile")+
geom_seq() +
labs(fill = 'Protein')
emale_genes
data
g<-gggenomes(data) +
geom_gene(aes(fill=name), position="pile")+
geom_seq() +
labs(fill = 'Protein')
p_gtable <- ggplot_gtable(g)
p_gtable
g<-gggenomes(data) +
geom_gene(aes(fill=name), position="pile")+
geom_seq() +
labs(fill = 'Protein')
p_gtable <- ggplot_gtable(g)
gggenomes(emale_genes) +
# terminal inverted repeats
geom_gene(aes(fill=strand), position="strand") + # genes
geom_seq()
gggenomes(emale_genes) +
# terminal inverted repeats
geom_gene(aes(fill=strand), position="strand") + # genes
geom_seq()
emale_genes
emale_genes$start
data<-tibble(
file_id=rep('file', 6),
seq_id =rep('BVI',6),
start = c(616,2084,2624,2874, 3305, 4890),
end=c(2631,2308,4969,3119, 4969, 5174),
type=rep('CDS',6),
name=c('NS1','7.5kDa','VP1','X','VP2', '11kDa'))
g<-gggenomes(data) +
geom_gene(aes(fill=name), position="pile")+
geom_seq() +
labs(fill = 'Protein')
###########Chong sample################
library(gggenomes)
data<-tibble(
file_id=rep('file', 6),
seq_id =rep('BVI',6),
start = c(616,2084,2624,2874, 3305, 4890),
end=c(2631,2308,4969,3119, 4969, 5174),
type=rep('CDS',6),
name=c('NS1','7.5kDa','VP1','X','VP2', '11kDa'))
g<-gggenomes(data) +
geom_gene(aes(fill=name), position="pile")+
geom_seq() +
labs(fill = 'Protein')
g
g<-gggenomes(data, infer_start=1) +
geom_gene(aes(fill=name), position="pile")+
geom_seq() +
labs(fill = 'Protein')
g
g<-gggenomes(data, infer_start=1) +
geom_gene(aes(fill=name), position="pile")+
geom_seq() +
labs(fill = 'Protein')
g
g<-gggenomes(data, infer_start=1) +
geom_gene(aes(fill=name), position="pile")+
geom_seq() +
geom)seq_label()+
g
g<-gggenomes(data, infer_start=1) +
geom_gene(aes(fill=name), position="pile")+
geom_seq() +
geom_seq_label()+
labs(fill = 'Protein')
g
g<-gggenomes(data, infer_start=1) +
geom_gene(aes(fill=name), position="pile")+
geom_seq() +
geom_gene_label()+
labs(fill = 'Protein')
g
data<-tibble(
file_id=rep('file', 6),
seq_id =rep('NC_000883.2',6),
start = c(616,2084,2624,2874, 3305, 4890),
end=c(2631,2308,4969,3119, 4969, 5174),
type=rep('CDS',6),
name=c('NS1','7.5kDa','VP1','X','VP2', '11kDa'))
gggenomes(data, infer_start=1) +
geom_gene(aes(fill=name), position="pile")+
geom_seq() +
geom_seq_label()+
labs(fill = 'Protein')
gff_filepath <-"C:\\desktop\\Research_BVU\\diversityProject\\B19V_trial3\\refseq\\NC_000883_2.ggf3"
read_gff3(gff_filepath)
read_gff3("C:\\desktop\\Research_BVU\\diversityProject\\B19V_trial3\\refseq\\NC_000883_2.ggf3")
gff_filepath <-"C:\\desktop\\Research_BVU\\diversityProject\\B19V_trial3\\refseq\\NC_000883_2.gff3"
read_gff3(gff_filepath)
feat<-read_gff3(gff_filepath)
features<-read_gff3(gff_filepath)
gggenomes(feats = features) +
geom_gene(aes(fill=name), position="pile")+
geom_seq() +
geom_seq_label()+
labs(fill = 'Protein')
features
features
gggenomes(feats = features) +
geom_gene(aes(fill=product), position="pile")+
geom_seq() +
geom_seq_label()+
labs(fill = 'Protein')
##########playground#############
gff_filepath <-"C:\\desktop\\Research_BVU\\diversityProject\\B19V_trial3\\refseq\\edited_NC_000883_2.gff3"
features<-read_gff3(gff_filepath)
features
gggenomes(feats = features) +
geom_gene(aes(fill=product), position="pile")+
geom_seq() +
geom_seq_label()+
labs(fill = 'Protein')
features<-read_feats(gff_filepath)
features
gggenomes(feats = features) +
geom_gene(aes(fill=product), position="pile")+
geom_seq() +
geom_seq_label()+
labs(fill = 'Protein')
gggenomes(feats = features) +
geom_gene(aes(fill=product), position="pile")+
geom_seq() +
geom_seq_label()+
labs(fill = 'Protein') +
geom_segment(x = 2000, y = y2005, xend = 2030, yend = y2030,
arrow = arrow(length = unit(0.03, "npc"), ends = "both"))
gggenomes(feats = features) +
geom_gene(aes(fill=product), position="pile")+
#geom_seq() +
geom_seq_label()+
labs(fill = 'Protein') +
geom_segment(x = 2000, y = , xend = 2030, yend = y2030,
arrow = arrow(length = unit(0.03, "npc"), ends = "both"))
gggenomes(feats = features) +
geom_gene(aes(fill=product), position="pile")+
#geom_seq() +
geom_seq_label()+
labs(fill = 'Protein') #+
features
gggenomes(feats = features) +
geom_gene(aes(fill=product), position="pile")+
geom_seq() +
geom_seq_label()+
labs(fill = 'Protein') +
geom_segment(x = 2000, y = seq_id, xend = 2030, yend = seq_id+1,
arrow = arrow(length = unit(0.03, "npc"), ends = "both"))
gggenomes(feats = features) +
geom_gene(aes(fill=product), position="pile")+
geom_seq() +
geom_seq_label()+
labs(fill = 'Protein') +
geom_segment(x = 2000, y = features$seq_id, xend = 2030, yend =  features$seq_id+1,
arrow = arrow(length = unit(0.03, "npc"), ends = "both"))
gggenomes(feats = features) +
geom_gene(aes(fill=product), position="pile")+
geom_seq() +
geom_seq_label()+
labs(fill = 'Protein') +
geom_segment(x = 2000, y = features$seq_id, xend = 2030, yend =  features$seq_id,
arrow = arrow(length = unit(0.03, "npc"), ends = "both"))
gggenomes(feats = features) +
geom_gene(aes(fill=product), position="pile")+
geom_seq() +
geom_seq_label()+
labs(fill = 'Protein') +geom_segment(aes(x=0.5, xend=2.5, y=0.5, yend=1.5), colour="red")
gggenomes(feats = features) +
geom_gene(aes(fill=product), position="pile")+
geom_seq() +
geom_seq_label()+
labs(fill = 'Protein') +geom_segment(aes(x=0.5, xend=1.5, y=0.5, yend=1.5), colour="red")
rlang::last_error()
gggenomes(feats = features) +
geom_gene(aes(fill=product), position="pile")+
labs(fill = 'Protein') +geom_segment(aes(x=0.5, xend=1.5, y=0.5, yend=1.5), colour="red")
gggenomes(feats = features) +
geom_gene(aes(fill=product), position="pile")+
geom_seq() +
geom_seq_label()+
labs(fill = 'Protein') +geom_segment(aes(x=0.5, xend=1.5, y=0.5, yend=1.5), colour="red")
gggenomes(feats = features) +
geom_gene(aes(fill=product), position="pile")+
geom_seq() +
geom_seq_label()+
labs(fill = 'Protein')
gggenomes(feats = features) +
geom_gene(aes(fill=product), position="pile")+
geom_seq() +
geom_seq_label()+
labs(fill = 'Protein') + geom_vline(xintercept = 6)
gggenomes(feats = features) +
geom_gene(aes(fill=product), position="pile")+
geom_seq() +
geom_seq_label()+
labs(fill = 'Protein') + geom_line(arrow = arrow())
gggenomes(feats = features) +
geom_gene(aes(fill=product), position="pile")+
geom_seq() +
geom_seq_label()+
labs(fill = 'Protein')
gggenomes(feats = features) +
geom_gene(aes(fill=product), position="pile")+
geom_seq() +
geom_seq_label()+
labs(fill = 'Protein')+geom_line(x=c(0,2000), y=c(0.5,1.5))
gggenomes(feats = features) +
geom_gene(aes(fill=product), position="pile")+
geom_seq() +
geom_seq_label()+
labs(fill = 'Protein')
a<-c(rep(0,25))
b<-c(rep(25,25))
c<-c(rep(50,25))
d<-c(rep(75,25))
e<-c(rep(100,25))
df<-rbind(a,b,c,d,e)
df
ggplot(data=df)+geom_violin()
ggplot2(data=df)+geom_violin()
library(ggplot2)
ggplot2(data=df)+geom_violin()
ggplot(data=df)+geom_violin()
roxygen2::roxygenise()
library(vDiveR)
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
library(vDiveR)
?concat_conserved_kmer()
concat_conserved_kmer(proteins_1host)
?json2csv()
json2csv(JSONsample)
?plot_conservationLevel()
plot_conservationLevel(proteins_1host, conservation_label = 1,alpha=0.8, base_size = 15)
?plot_correlation()
plot_correlation(proteins_1host)
plot_entropy(proteins_1host)
plot_incidence(proteins_1host)
plot_dynamics_protein(proteins_1host)
plot_dynamics_proteome(proteins_1host)
plot_conservationLevel(proteins_1host)
library(vDiveR)
plot_conservationLevel(proteins_1host)
plot_conservationLevel(proteins_1host)
library(vDiveR)
library(vDiveR)
library(vDiveR)
roxygen2::roxygenise()
metadata_extraction()
filepath <- system.file('data','prot_NCBIProtein.fasta', package = 'vDiveR')
metadata_extraction(filepath)
metadata_extraction(filepath, source='ncbi')
roxygen2::roxygenise()
library(vDiveR)
filepath <- system.file('data-raw','prot_NCBIProtein.fasta', package = 'vDiveR')
meta <- metadataExtraction(filepath, 'ncbi')
filepath <- system.file('data','prot_NCBIProtein.fasta', package = 'vDiveR')
meta <- metadataExtraction(filepath, 'ncbi')
filepath
filepath <- system.file('data','prot_NCBIProtein.fasta', package = 'vDiveR')
filepath
filepath <-"data//prot_NCBIProtein.fasta"
meta <- metadataExtraction(filepath, 'ncbi')
plot_worldmap(meta = meta)
plot_time(meta)
roxygen2::roxygenise()
library(vDiveR)
meta <- metadata_extraction(filepath, 'ncbi')
plot_worldmap(meta = meta)
plot_time(meta)
roxygen2::roxygenise()
roxygen2::roxygenise()
library(vDiveR)
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
## code to prepare `DATASET` dataset goes here
proteins_1host<-read.csv('data-raw/proteins_1host.csv')
protein_2hosts<-read.csv('data-raw/protein_2hosts.csv')
metadata_input<- read_file('data-raw/prot_NCBIProtein.fasta')
JSON_sample <- jsonlite::fromJSON(txt = readLines(con = "data-raw/proteinA.json", encoding = "UTF-8"))
usethis::use_data(proteins_1host, protein_2hosts, metadata_input, JSON_sample, overwrite = T)
metadata_input<- read_file('data-raw/prot_NCBIProtein.fasta')
metadata_input<- readr::read_file('data-raw/prot_NCBIProtein.fasta')
JSON_sample <- jsonlite::fromJSON(txt = readLines(con = "data-raw/proteinA.json", encoding = "UTF-8"))
usethis::use_data(proteins_1host, protein_2hosts, metadata_input, JSON_sample, overwrite = T)
roxygen2::roxygenise()
library(vDiveR)
meta <- metadata_extraction(metadata_input, 'ncbi')
## code to prepare `DATASET` dataset goes here
proteins_1host<-read.csv('data-raw/proteins_1host.csv')
protein_2hosts<-read.csv('data-raw/protein_2hosts.csv')
JSON_sample <- jsonlite::fromJSON(txt = readLines(con = "data-raw/proteinA.json", encoding = "UTF-8"))
usethis::use_data(proteins_1host, protein_2hosts, JSON_sample, overwrite = T)
## code to prepare `DATASET` dataset goes here
proteins_1host<-read.csv('data-raw/proteins_1host.csv')
protein_2hosts<-read.csv('data-raw/protein_2hosts.csv')
JSON_sample <- jsonlite::fromJSON(txt = readLines(con = "data-raw/proteinA.json", encoding = "UTF-8"))
usethis::use_data(proteins_1host, protein_2hosts, JSON_sample, overwrite = T)
roxygen2::roxygenise()
roxygen2::roxygenise()
metadata<-read.csv('data-raw/metadata.csv')
usethis::use_data(proteins_1host, protein_2hosts, JSON_sample, metadata, overwrite = T)
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
library(vDiveR)
filepath <- system.file('inst/extdata','prot_NCBIProtein.fasta', package = 'vDiveR')
filepath
library(vDiveR)
metadata_input
metadata
library(vDiveR)
metadata
plot_time(metadata)
plot_worldmap(metadata)
library(vDiveR)
metadata
metadata<-read.csv('data-raw/metadata.csv')
usethis::use_data(proteins_1host, protein_2hosts, JSON_sample, metadata, overwrite = T)
roxygen2::roxygenise()
library(vDiveR)
metadata
filepath <- system.file('inst/extdata','prot_NCBIProtein.fasta', package = 'vDiveR')
filepath
filepath <- system.file('extdata','prot_NCBIProtein.fasta', package = 'vDiveR')
filepath
metadata_extraction(file_path = filepath, 'ncbi')
meta<-metadata_extraction(file_path = filepath, 'ncbi')
plot_time(meta)
?plot_time
metadata_extraction("GISAID_dummy.fasta", source="GISAID")
a<-metadata_extraction("GISAID_dummy.fasta", source="GISAID")
plot_time(a)
a<-metadata_extraction("GISAIDepiflu_dummy.fasta", source="GISAID")
a
roxygen2::roxygenise()
roxygen2::roxygenise()
library(vDiveR)
?plot_time
roxygen2::roxygenise()
?plot_time
?plot_time
roxygen2::roxygenise()
?plot_time
library(vDiveR)
?plot_time
plot_time(metadata)
roxygen2::roxygenise()
?metadata_extraction
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
usethis::use_news_md()
?add_badges
??add_badges
install.packages("hgutils")
?add_badges
library(hgutils)
world_map <- map_data("world")
world_map
?map_data
library(vDiveR)
roxygen2::roxygenise()
devtools::check()
